# docker-compose.yml
# Compose V2 no requiere "version:", la quitamos para evitar el warning.

services:
  api:
    build:
      context: ./ServidorAPI
    image: proyecto_comecat-api
    container_name: api
    # Si vas a llamar a la API SOLO a través del proxy de Nginx (blazor -> /api/),
    # podés comentar estas líneas de "ports". Si querés usar Postman desde el host, dejalas.
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - red_gatos
    volumes:
      - api_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:5000/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s

  blazor:
    build:
      context: ./ServidorBlazor
      dockerfile: Dockerfile
      args:
        CACHEBUST: "${CACHEBUST}"
        BUILD_ID:  "${BUILD_ID}"
    image: proyecto_comecat-blazor
    container_name: blazor
    ports:
      - "5003:80"
    networks:
      - red_gatos
    restart: unless-stopped
    depends_on:
      - api
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/index.html >/dev/null 2>&1 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 15s

  mqtt:
    build:
      context: ./ServidorMQTT
    image: proyecto_comecat-mqtt
    container_name: mqtt
    ports:
      - "5004:1883"
    networks:
      - red_gatos
    volumes:
      - mqtt_config:/mosquitto/config
      - mqtt_data:/mosquitto/data
      - mqtt_log:/mosquitto/log
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mosquitto -h >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 15s

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=changeme
      - MYSQL_DATABASE=comecat
      - MYSQL_USER=comecat
      - MYSQL_PASSWORD=changeme
    ports:
      - "5012:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - red_gatos
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -pchangeme --silent"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=changeme
    ports:
      - "5011:80"
    networks:
      - red_gatos
    depends_on:
      - mysql
    restart: unless-stopped

  n8n:
    build:
      context: ./ServidorN8N
      dockerfile: Dockerfile
    image: proyecto_comecat-n8n
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_USER_MANAGEMENT_DISABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - red_gatos
    depends_on:
      - api
      - mqtt
      - mysql
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "5010:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - red_gatos
    restart: unless-stopped

volumes:
  api_data:
  blazor_data:
  mqtt_config:
  mqtt_data:
  mqtt_log:
  n8n_data:
  portainer_data:
  mysql_data:

networks:
  red_gatos:
    driver: bridge
